#!/bin/bash

API_KEY=$(cat ${XDG_CONFIG_HOME:-$HOME/.config}/rory.token)
DEST_URL="https://stephanie.is/upload"

# Poomf for Ubuntu/linux
# Owner : Max Gurela
# May 2015
#
# Dependencies:
# - gnome-screenshot
# - curl
# - zenity
# - xclip
# - notify-send
#
# Instructions:
# - Place this file wherever you want (/usr/local/bin)
# - Set up keyboard shortcuts within linux (in Ubuntu it's system settings > keyboard > keyboard shortcuts > custom shortcuts)
#
#     command      description    (recommended keyboard shortcut)
#    ---------------------------------------------------------------
#    poomf -c    upload window    (Ctrl + Shift + 2/@)
#    poomf -a    upload desktop  (Ctrl + Shift + 3/#)
#    poomf -b    upload clipping  (Ctrl + Shift + 4/$)
#    poomf -d    upload file      (Ctrl + Shift + U)
#
#
# Notes:
# - Link(s) will be copied into clipboard and appear in notifications
# - curl upload code borrowed from online sources

# Usage: poomfFile [fileName]
function poomfFile ()
{
    if [ -z "$1" ]; then
        echo "No file specified"
        exit 1
    elif [ ! -f "$1" ]; then
        echo "poomf cancelled"
        exit 1
    fi

    file=$1
    printf "Uploading ${file}..."

    if [ -n "$useLocalFileName" ]; then
        fileArgs=(-F file="@${file};headers=\"X-Rory-Use-Filename: yes\"")
    else
        fileArgs=(-F file="@${file}")
    fi

    n=0  # Multiple tries
    while [[ $n -le 3 ]]; do
        printf "try #${n}..."
        return_file=$(curl -sSf -X POST "${fileArgs[@]}" -H "Authorization: Bearer $API_KEY" "${DEST_URL}")
        if [ -n "$return_file" ]; then
            printf 'done.\n'
            break
        else
            printf 'failed.\n'
            ((n = n +1))
        fi
    done
    if [[ -n ${return_file} ]]; then
        fileURL="${return_file}"
        echo "Upload complete! $fileURL"
        #Copy link to clipboard, show notification
        if hash wl-copy 2>/dev/null; then
            printf $fileURL | wl-copy
            printf $fileURL | wl-copy -p
        fi
        if hash notify-send 2>/dev/null; then
            notify-send -i "$( cd "$( dirname "$0" )" && pwd )/icon.png" -t 2000 "poomf complete!" "$fileURL"
        fi
    else
        echo "Upload failed."
        if hash notify-send 2>/dev/null; then
            notify-send -i "$( cd "$( dirname "$0" )" && pwd )/icon.png" -t 2000 "poomf failed!"
        fi
    fi
}

function helpText ()
{
    printf "_____________ poomf for linux _____________\n"
    printf "Usage:\n"
    printf "  poomf [OPTIONS] [PATH]\n"
    printf "\n"
    printf "OPTIONS:\n"
    printf "  -d                 poomf entire desktop\n"
    printf "  -a                 poomf selected area\n"
    printf "  -w                 poomf current window\n"
    printf "  -c                 poomf clipboard content\n"
    printf "  -f                 poomf specific file (opens file dialog)\n"
    printf "  -n                 respect original file name when uploading\n"
    printf "\n"
    printf "  --help,-h          show this page\n"
    printf "\n"
    printf "PATH:\n"
    printf "  PATH               optional: path of file to poomf\n"
}

function generateFileName () { echo "/tmp/poomf-linux-$(date +%Y-%m-%dT%H.%M.%S).png"; }

function generateTextName () { echo "/tmp/poomf-linux-$(date +%Y-%m-%dT%H.%M.%S).txt"; }


if [ -z "$1" ]; then
    echo "No file entered."
    helpText
    exit 1

fi

if [ "$1" = "-n" ]; then
    shift
    useLocalFileName=1
fi

#Get file to poomf and poomf it
case "$1" in
    -d)
        echo "Whole Desktop"
        fileName=$(generateFileName)
        grim "$fileName"
        poomfFile "$fileName"
        ;;

    -a)
        echo "Area"
        fileName=$(generateFileName)
        grim -g "$(slurp)" "$fileName"
        poomfFile "$fileName"
        ;;

    -w)
        echo "Window"
        fileName=$(generateFileName)
        grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused? == true).rect | "\(.x),\(.y) \(.width)x\(.height)"')" "$fileName"
        poomfFile "$fileName"
        ;;

    -c)
        echo "Clipboard upload"
        content=`wl-paste`
        if [ -f "$content" ]; then
            poomfFile "$content"
        else
            fileName=$(generateTextName)
            echo "$content" > "$fileName"
            poomfFile "$fileName"
        fi
        ;;

    -f)
        echo "File Upload"
        fileName=`zenity --file-selection`
        poomfFile "$fileName"
        ;;

    -h|--help)
        helpText
        exit 0
        ;;

    *)
        echo "Upload $1"
        poomfFile "$1"
        ;;
esac

