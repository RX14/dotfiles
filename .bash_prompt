function prompt_setup {
    PROMPT_EXIT="$?"
    if [ $PROMPT_EXIT -ne 0 ]; then
        PROMPT_EXIT_COLOUR="\[\e[1;31m\]"
    else
        PROMPT_EXIT_COLOUR="\[\033[01;32m\]"
    fi
}

function prompt_reset {
    PS1+="\[\e[0m\]"
}

function prompt_exit_code {
    if [ $PROMPT_EXIT -ne 0 ]; then
        PS1+=$PROMPT_EXIT_COLOUR
        PS1+=' ($PROMPT_EXIT)'
        prompt_reset
    fi
}

function prompt_pointer {
    PS1+=$PROMPT_EXIT_COLOUR
#    PS1+=' â–º ' #UNICODE POINTER
    PS1+=' $ ' #NORMAL POINTER
}

function parse_git_dirty {
    [[ $(\git status 2> /dev/null | tail -n1) != "nothing to commit, working directory clean" ]] && echo "*"
}

function parse_git_stash {
    [[ $(\git stash list 2> /dev/null | tail -n1) != "" ]] && echo "^"
}
function parse_git_branch {
        \git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)$(parse_git_stash)/"
}

function prompt_before {
    PS1+="${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]"
    PS1+=":\[\033[01;34m\]\w\[\033[00m\]"; prompt_reset
}

function prompt_after {
    \git rev-parse --is-inside-work-tree > /dev/null 2>&1
    if [ ! $? -ne 0 ]; then
        PS1+=" [\[\e[0;36m\]$(parse_git_branch)\[\e[m\]]"
    fi
    prompt_exit_code
    prompt_pointer
    prompt_reset
}

function prompt_command {
    prompt_setup
    PS1=''

    prompt_before
    prompt_after
}

PROMPT_COMMAND="prompt_command"
